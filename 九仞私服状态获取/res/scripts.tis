function movable() // install movable window handler
{
    var xoff, yoff;
    var dragging = false;
    var movableArea = $(body);
    stdout.print("MovableArea:");
    stdout.println($(body));
    function doDrag() {
        while (dragging) {
            var (x,y) = view.box(#position,#border,#screen);
            //stdout.printf("Border(x:%d,y:%d)",x,y);
            (x,y) = view.box(#position,#client,#screen);
            //stdout.printf(",Client(x:%d,y:%d)\n",x,y);
            view.doEvent();
        }
    }

    function onMouseDown(evt) {
        if (evt.target !== movableArea) return false;
        xoff = evt.x;
        yoff = evt.y;
        dragging = true;
        view.root.capture(true);
        doDrag();
        return true;
    }

    function onMouseMove(evt) {
        if (dragging) {
            view.move(evt.xScreen - xoff, evt.yScreen - yoff, true); // true - x,y are coordinates of the client area on the screen
            return true;
        }
        return false;
    }

    function stopDrag() {
        if (dragging) {
            dragging = false;
            view.root.capture(false);
            return true;
        }
        return false;
    }

    function onMouseUp(evt) {
        return stopDrag();
    }
    function onKeyDown(evt) {
        if (evt.keyCode == Event.VK_ESCAPE) return stopDrag();
    }

    // hookup event handlers:
    view.root.subscribe(onMouseDown, Event.MOUSE, Event.MOUSE_DOWN);
    view.root.subscribe(onMouseUp, Event.MOUSE, Event.MOUSE_UP);
    view.root.subscribe(onMouseMove, Event.MOUSE, Event.MOUSE_MOVE);
    view.root.subscribe(onKeyDown, Event.KEY, Event.KEY_DOWN);
    return false;
}